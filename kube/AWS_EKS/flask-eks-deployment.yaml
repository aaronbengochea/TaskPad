apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1 # Allows up to x additional pods above desired replica count at time of update
      maxUnavailable: 0 # Max unavailable pods during update
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: aaronbengo/cca2:latest
        ports:
        - containerPort: 3000
        env:
        - name: MONGO_HOST
          value: "mongo"
        - name: MONGO_PORT
          value: "27017"
        - name: MONGO_DB
          value: "cca2"
        - name: MONGO_COLLECTION
          value: "todo"
        livenessProbe:
          httpGet:
            path: /health # Uses HTTP get to check health status of app
            port: 3000
          initialDelaySeconds: 10 # Performs the first check after 10s have passed from container creation
          periodSeconds: 3600 # Checks every X seconds
          failureThreshold: 3 # Amount of consecutive failures before k8 restarts the pod
        readinessProbe:
          httpGet:
            path: /health # Uses HTTP get to check health status of app
            port: 3000
          initialDelaySeconds: 5 # Performs the first check after 5s have passed from container creation
          periodSeconds: 3600 # Checks every X seconds
          failureThreshold: 2 # Amount of consecutive failures before k8 restarts the pod
